<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Ackerley's Blog</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://ackerleytng.github.io/feed.xml" />
<link rel="alternate" type="text/html" href="http://ackerleytng.github.io" />
<updated>2014-08-24T09:58:16+08:00</updated>
<id>http://ackerleytng.github.io/</id>
<author>
  <name>Ackerley Tng</name>
  <uri>http://ackerleytng.github.io/</uri>
  <email>ackerleytng@gmail.com</email>
</author>


<entry>
  <title type="html"><![CDATA[Emacs-Tramp-Terminator-Integration]]></title>
 <link rel="alternate" type="text/html" href="http://ackerleytng.github.io/emacs-tramp-terminator-integration/" />
  <id>http://ackerleytng.github.io/emacs-tramp-terminator-integration</id>
  <updated>2014-08-23T00:00:00-00:00</updated>
  <published>2014-08-23T00:00:00+08:00</published>
  
  <author>
    <name>Ackerley Tng</name>
    <uri>http://ackerleytng.github.io</uri>
    <email>ackerleytng@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;iTerm2 has a feature called &lt;a href=&quot;http://iterm2.com/triggers.html&quot;&gt;Triggers&lt;/a&gt; which doesn’t seem to exist in any of the Linux terminal emulators.&lt;/p&gt;

&lt;p&gt;Terminator has a plugin system, so I hacked together something that would parse emacs-formatted ‘urls’ and open those urls in Emacs over Tramp. The concept of tying triggers with the terminal emulator is borrowed from my ECE MEng advisor, Prof. (Christopher Batten)[http://www.csl.cornell.edu/~cbatten/].&lt;/p&gt;

&lt;h2 id=&quot;concept&quot;&gt;Concept&lt;/h2&gt;

&lt;p&gt;The idea is as follows. ssh into the research server to access source code there. Instead of customizing Emacs on every server you work with, customize only one - the one on the computer that you ssh from.&lt;/p&gt;

&lt;p&gt;Generate a string containing information about the current user and server IP address, and the path to the file you want to edit.&lt;/p&gt;

&lt;p&gt;I do this using a bash function added to .bashrc on the remote server:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Remote emacsclient trigger
function oe() {
    user=$(whoami)
    file=$(echo &quot;$1&quot; | tr -d &#39; &#39;)
    hostname=$(hostname -I | tr -d &#39; &#39;)
    workingdir=$(pwd | tr -d &#39; &#39;)
    echo &quot;remote-emacsclient-trigger[[[/$user@${hostname}:${workingdir}/${file}]]]&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So say I’m in /home/user/ on the remote server and I’m working on blah.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;oe blah
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will cause the remote server to echo&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;remote-emacsclient-trigger[[[/user@123.123.123.123:/home/user/blah]]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In iTerm2, the trigger can pick up the string and in turn start a coprocess with the line &lt;code&gt;emacsclient -c -n &amp;lt;the content between [[[ and ]]]&amp;gt;&lt;/code&gt;, using regex matches.&lt;/p&gt;

&lt;p&gt;The following plugin, written for Terminator, will give you a similar effect, except you have to right click on the part between &lt;code&gt;[[[&lt;/code&gt; and &lt;code&gt;]]]&lt;/code&gt;, and click open link.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ackerleytng.github.io/post_downloads/activate_emacs.py&quot;&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Place that file in /usr/share/terminator/terminatorlib/plugins/activate_emacs.py and restart Terminator, then right click and click Preferences, go to the Plugins tab and check the ActivateEmacs plugin.&lt;/p&gt;

&lt;h2 id=&quot;the-process&quot;&gt;The process&lt;/h2&gt;

&lt;p&gt;There’s little documentation on plugin writing, so it took a while to look through the examples and other plugins to start. Fortunately Terminator’s code could mostly be found in /usr/share/terminator/, but unfortunately it still takes time to scan through all the code.&lt;/p&gt;

&lt;p&gt;There are lots of functions in terminator’s code to do with matching, but I believe those are only activated on mouseovers rather than as they appear in the terminal.&lt;/p&gt;

&lt;p&gt;The URLHandler plugin sounds like it could parse any text or string - it can, but only on mouseovers. The &lt;code&gt;callback()&lt;/code&gt; function is something that is meant to transform the ‘url’ that matched to another url for a web browser to open; it does not perform actions on the matched string directly.&lt;/p&gt;

&lt;p&gt;(Jocelyn’s comment)[http://www.tenshu.net/2010/04/writing-terminator-plugins.html?showComment=1350573521137#c3847139789739776267] was so super useful in writing my plugin!&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://ackerleytng.github.io/emacs-tramp-terminator-integration/&quot;&gt;Emacs-Tramp-Terminator-Integration&lt;/a&gt; was originally published by Ackerley Tng at &lt;a href=&quot;http://ackerleytng.github.io&quot;&gt;Ackerley's Blog&lt;/a&gt; on August 23, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[A Pure WinAVR Setup]]></title>
 <link rel="alternate" type="text/html" href="http://ackerleytng.github.io/pure-winavr/" />
  <id>http://ackerleytng.github.io/pure-winavr</id>
  <updated>2014-07-31T00:00:00-00:00</updated>
  <published>2014-07-31T00:00:00+08:00</published>
  
  <author>
    <name>Ackerley Tng</name>
    <uri>http://ackerleytng.github.io</uri>
    <email>ackerleytng@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;This describes how to use WinAVR with the AVRISP mkII Programmer &lt;em&gt;without&lt;/em&gt; using Atmel Studio. This has been tried on Windows 7.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Install WinAVR from &lt;a href=&quot;http://sourceforge.net/projects/winavr/files/&quot;&gt;SourceForge&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Download libusb-win32 from &lt;a href=&quot;http://sourceforge.net/p/libusb-win32/wiki/Home/&quot;&gt;SourceForge&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Unzip and open the libusb-win32-bin-1.2.6.0/bin/ folder&lt;/li&gt;
  &lt;li&gt;Run inf-wizard.exe with the AVRISP mkII Programmer plugged in&lt;/li&gt;
  &lt;li&gt;Follow the instructions and allow the wizard to do the driver installation for you.&lt;/li&gt;
&lt;/ol&gt;

  &lt;p&gt;&lt;a href=&quot;http://ackerleytng.github.io/pure-winavr/&quot;&gt;A Pure WinAVR Setup&lt;/a&gt; was originally published by Ackerley Tng at &lt;a href=&quot;http://ackerleytng.github.io&quot;&gt;Ackerley's Blog&lt;/a&gt; on July 31, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Wireless@SGx]]></title>
 <link rel="alternate" type="text/html" href="http://ackerleytng.github.io/wireless-at-sgx/" />
  <id>http://ackerleytng.github.io/wireless-at-sgx</id>
  <updated>2014-07-25T00:00:00-00:00</updated>
  <published>2014-07-25T00:00:00+08:00</published>
  
  <author>
    <name>Ackerley Tng</name>
    <uri>http://ackerleytng.github.io</uri>
    <email>ackerleytng@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;I wonder if anyone else still uses Wireless@SGx, but anyway…&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go &lt;a href=&quot;http://pas.singtel.com/wsg_connect/index.php&quot;&gt;here&lt;/a&gt; to generate your username. I used my Singnet account, which is of the form &lt;code&gt;blahblah@singnet&lt;/code&gt;. The username generated should be &lt;code&gt;blahblah|???????????????????????@singnet&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Use the generated username as the username when connecting to Wireless@SGx. The password is the same password you use for Singnet. You can ignore all the other instructions about PEAP etc - those should come automatically on today’s devices.&lt;/li&gt;
&lt;/ol&gt;

  &lt;p&gt;&lt;a href=&quot;http://ackerleytng.github.io/wireless-at-sgx/&quot;&gt;Wireless@SGx&lt;/a&gt; was originally published by Ackerley Tng at &lt;a href=&quot;http://ackerleytng.github.io&quot;&gt;Ackerley's Blog&lt;/a&gt; on July 25, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Understanding COE]]></title>
 <link rel="alternate" type="text/html" href="http://ackerleytng.github.io/understanding-coe/" />
  <id>http://ackerleytng.github.io/understanding-coe</id>
  <updated>2014-07-24T00:00:00-00:00</updated>
  <published>2014-07-24T00:00:00+08:00</published>
  
  <author>
    <name>Ackerley Tng</name>
    <uri>http://ackerleytng.github.io</uri>
    <email>ackerleytng@gmail.com</email>
  </author>
  <content type="html">&lt;h1 id=&quot;what-is-coe&quot;&gt;What is COE?&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;COE = Certificate of Entitlement&lt;/li&gt;
  &lt;li&gt;Required for registration of new vehicles in Singapore&lt;/li&gt;
  &lt;li&gt;Valid for 10 years&lt;/li&gt;
  &lt;li&gt;After 10 years, pay Prevailing Quota Premium ( = three-month moving average of the Quota Premium) to revalidate COE for either 5 or 10 years
    &lt;ul&gt;
      &lt;li&gt;5-year COEs cannot be revalidated (vehicle is automatically deregistered after that 5 years.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;bidding-system&quot;&gt;Bidding system&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Bid through the COE Open Bidding System&lt;/li&gt;
  &lt;li&gt;Twice a month
    &lt;ul&gt;
      &lt;li&gt;First and third Monday at 12pm&lt;/li&gt;
      &lt;li&gt;Ends on the Wednesday at 4pm&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Quota available for bidding is announced before session starts&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;bidding&quot;&gt;Bidding&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Specify reserve price on COE Open Bidding System&lt;/li&gt;
  &lt;li&gt;Bid automatically increases until reserve price is reached&lt;/li&gt;
  &lt;li&gt;Current COE Price (CCP) must be equal or higher than the reserve price for bid to be in the running&lt;/li&gt;
  &lt;li&gt;CCP = highest unsuccessful bid + 1&lt;/li&gt;
  &lt;li&gt;At the time that the bidding closes, the CCP becomes the Quota Premium&lt;/li&gt;
  &lt;li&gt;All successful bidders pay the Quota Premium&lt;/li&gt;
  &lt;li&gt;There is a bid deposit (refunded on unsuccessful bid) of $10000 for categories A, B, C and E. Deposit is $200 for category D.&lt;/li&gt;
  &lt;li&gt;There is an admin fee of between $2 and $10 (varies by bank - DBS, OCBC, UOB, MayBank)&lt;/li&gt;
  &lt;li&gt;Can revise reserve price upward (not downward). Admin fee applies for each revision.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;rebate&quot;&gt;Rebate&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;COE Rebates are available if vehicle is de-registered before COE expires (pro-rated)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;categories&quot;&gt;Categories&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Category&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;A&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Cars with engine capacity up to 1600cc and Maximum Power Output up to 97kW (130bhp)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;B&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Cars with engine capacity above 1600cc or Maximum Power Output above 97kW (130bhp)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;C&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Goods vehicles or buses&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;D&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Motorcycles&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;E&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Open&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;validity&quot;&gt;Validity&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Bids in category A, B, D are valid for 6 months. Bids in category C and E are valid for 3 months. If bid is not used, bid deposit is forfeited.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;breakdown-of-full-costs&quot;&gt;Breakdown of Full Costs&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Registration Fees&lt;/li&gt;
  &lt;li&gt;Open Market Value (OMV) ( = Determined by )&lt;/li&gt;
  &lt;li&gt;Excise Duty (20% on OMV)&lt;/li&gt;
  &lt;li&gt;GST (7% on Excise Duty + OMV)&lt;/li&gt;
  &lt;li&gt;Additional Registration Fee (ARF) (Tiered, minimum of 100% of OMV)&lt;/li&gt;
  &lt;li&gt;Carbon Emissions (CEVS)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;More to come…&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.lta.gov.sg/content/ltaweb/en/roads-and-motoring/owning-a-vehicle/vehicle-quota-system/certificate-of-entitlement-coe.html&quot;&gt;Overview from LTA&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ifaqs.flexanswer.com/cfp/pages/Themes/LTA/Answers.aspx?MesId=9738718&amp;amp;From=Show&amp;amp;TOPV=YES&amp;amp;VMesID=2288405&quot;&gt;Description of Categories&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sgcarmart.com/news/writeup.php?AID=171&amp;amp;PN=2&quot;&gt;Breakdown of Car Costs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


  &lt;p&gt;&lt;a href=&quot;http://ackerleytng.github.io/understanding-coe/&quot;&gt;Understanding COE&lt;/a&gt; was originally published by Ackerley Tng at &lt;a href=&quot;http://ackerleytng.github.io&quot;&gt;Ackerley's Blog&lt;/a&gt; on July 24, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Tamagoyaki!]]></title>
 <link rel="alternate" type="text/html" href="http://ackerleytng.github.io/tamagoyaki/" />
  <id>http://ackerleytng.github.io/tamagoyaki</id>
  <updated>2014-07-21T00:00:00-00:00</updated>
  <published>2014-07-21T00:00:00+08:00</published>
  
  <author>
    <name>Ackerley Tng</name>
    <uri>http://ackerleytng.github.io</uri>
    <email>ackerleytng@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Learnt this from youtube!&lt;/p&gt;

&lt;p&gt;I didn’t have mirin so I put apple cider vinegar; added sugar, salt, soy sauce, didn’t have dashi so it was left out.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ackerleytng.github.io/post_images/tamagoyaki-0.jpg&quot; alt=&quot;tamagoyaki-0&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ackerleytng.github.io/post_images/tamagoyaki-1.jpg&quot; alt=&quot;tamagoyaki-1&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://ackerleytng.github.io/tamagoyaki/&quot;&gt;Tamagoyaki!&lt;/a&gt; was originally published by Ackerley Tng at &lt;a href=&quot;http://ackerleytng.github.io&quot;&gt;Ackerley's Blog&lt;/a&gt; on July 21, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Web Server Setup on my Mac]]></title>
 <link rel="alternate" type="text/html" href="http://ackerleytng.github.io/web-server-setup/" />
  <id>http://ackerleytng.github.io/web-server-setup</id>
  <updated>2014-07-17T00:00:00-00:00</updated>
  <published>2014-07-17T00:00:00+08:00</published>
  
  <author>
    <name>Ackerley Tng</name>
    <uri>http://ackerleytng.github.io</uri>
    <email>ackerleytng@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;I used MacPorts to handle all of these installations. I guess I should have tried php54 or even php55, but I was partially following instructions &lt;a href=&quot;http://dsheiko.com/weblog/my-lovely-mac-os-x-web-development-environment&quot;&gt;here&lt;/a&gt; and wanted to just get something working first.&lt;/p&gt;

&lt;p&gt;Here’s a list of commands&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo port -v selfupdate
sudo port upgrade outdated
sudo port install apache2
sudo port install php5 +apache2
sudo port install php5-mysql
sudo port install mysql56-server
sudo port install phpmyadmin +php5

sudo port select mysql mysql56
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setting up mysql&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo /opt/local/lib/mysql56/bin/mysql_install_db --user mysql
sudo chown -R mysql:mysql /opt/local/var/db/mysql56/ 
sudo chown -R mysql:mysql /opt/local/var/run/mysql56/ 
sudo chown -R mysql:mysql /opt/local/var/log/mysql56/
mysqladmin -u root -p password &amp;lt;new-password&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setting up PHP to work with apache&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo  /opt/local/apache2/bin/apxs -a -e -n &quot;php5&quot; libphp5.so
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Update Apache’s httpd.conf file. Search for and modify&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DirectoryIndex index.php index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add these lines to httpd.conf too&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# For PHP
Include conf/extra/mod_php.conf

# For phpMyAdmin
Include conf/extra/httpd-phpmyadmin.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create /opt/local/apache2/conf/extra/httpd-phpmyadmin.conf and add the following as contents&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AliasMatch ^/phpmyadmin(?:/)?(/.*)?$ &quot;/opt/local/www/phpmyadmin$1&quot;

&amp;lt;Directory &quot;/opt/local/www/phpmyadmin&quot;&amp;gt;
    Options -Indexes
    AllowOverride None
    Order allow,deny
    Allow from all
    LanguagePriority en de es fr ja ko pt-br ru 
    ForceLanguagePriority Prefer Fallback
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Edit phpMyAdmin config file: /opt/local/www/phpmyadmin/config.inc.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$cfg[&#39;Servers&#39;][$i][&#39;auth_type&#39;] = &#39;config&#39;;
$cfg[&#39;Servers&#39;][$i][&#39;user&#39;] = &#39;root&#39;;
$cfg[&#39;Servers&#39;][$i][&#39;password&#39;] = &#39;&amp;lt;new-password&amp;gt;&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Edit this line to AllowNoPassword.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$cfg[&#39;Servers&#39;][$i][&#39;AllowNoPassword&#39;] = true;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PHP config files&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /opt/local/etc/php5
sudo cp php.ini-development php.ini
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Follow instructions from MacPorts&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;To use mysqlnd with a local MySQL server, edit /opt/local/etc/php5/php.ini and set mysql.default_socket,
mysqli.default_socket and pdo_mysql.default_socket to the path to your MySQL server&#39;s socket file.

For mysql5, use /opt/local/var/run/mysql5/mysqld.sock
For mysql51, use /opt/local/var/run/mysql51/mysqld.sock
For mysql55, use /opt/local/var/run/mysql55/mysqld.sock
For mysql56, use /opt/local/var/run/mysql56/mysqld.sock
For mariadb, use /opt/local/var/run/mariadb/mysqld.sock
For percona, use /opt/local/var/run/percona/mysqld.sock
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To prevent auto-starting of the daemons on boot, I did&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo launchctl unload /Library/LaunchDaemons/org.macports.apache2.plist
sudo launchctl unload /Library/LaunchDaemons/org.macports.mysql56-server.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But I believe you could use this too&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo port unload apache2
sudo port unload mysql-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setting up aliases in ~/.bash_profile&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias apachestart=&quot;sudo /opt/local/apache2/bin/apachectl -k start&quot;
alias apachestop=&quot;sudo /opt/local/apache2/bin/apachectl -k stop&quot;
alias apacherestart=&quot;sudo /opt/local/apache2/bin/apachectl -k restart&quot;
alias mysqlstart=&quot;sudo /opt/local/lib/mysql56/bin/mysqld_safe &amp;amp;&quot;
alias mysqlstop=&quot;mysqladmin -u root -p shutdown&quot;
&lt;/code&gt;&lt;/pre&gt;

  &lt;p&gt;&lt;a href=&quot;http://ackerleytng.github.io/web-server-setup/&quot;&gt;Web Server Setup on my Mac&lt;/a&gt; was originally published by Ackerley Tng at &lt;a href=&quot;http://ackerleytng.github.io&quot;&gt;Ackerley's Blog&lt;/a&gt; on July 17, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Setting up OpenSSH on CrunchBang Linux]]></title>
 <link rel="alternate" type="text/html" href="http://ackerleytng.github.io/setting-up-openssh/" />
  <id>http://ackerleytng.github.io/setting-up-openssh</id>
  <updated>2014-07-17T00:00:00-00:00</updated>
  <published>2014-07-17T00:00:00+08:00</published>
  
  <author>
    <name>Ackerley Tng</name>
    <uri>http://ackerleytng.github.io</uri>
    <email>ackerleytng@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;When installing crunchbang I’m pretty sure I chose to install the OpenSSH server but somehow I when I did this again, it still installed for me. Hope it isn’t installed twice for some stupid reason.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install openssh-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and that was it. I can ssh in from my mac after that.&lt;/p&gt;

&lt;p&gt;Follow instructions from &lt;a href=&quot;http://crunchbanglinux.org/wiki/howto/ssh&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When setting up ssh keys, there’s no need to modify the sshd_config file as described on the page. It seems to work out of the box.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://ackerleytng.github.io/setting-up-openssh/&quot;&gt;Setting up OpenSSH on CrunchBang Linux&lt;/a&gt; was originally published by Ackerley Tng at &lt;a href=&quot;http://ackerleytng.github.io&quot;&gt;Ackerley's Blog&lt;/a&gt; on July 17, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Setting up Arduino with CrunchBang Linux for pure C projects]]></title>
 <link rel="alternate" type="text/html" href="http://ackerleytng.github.io/arduino-with-avrisp-mkii-crunchbang/" />
  <id>http://ackerleytng.github.io/arduino-with-avrisp-mkii-crunchbang</id>
  <updated>2014-07-17T00:00:00-00:00</updated>
  <published>2014-07-17T00:00:00+08:00</published>
  
  <author>
    <name>Ackerley Tng</name>
    <uri>http://ackerleytng.github.io</uri>
    <email>ackerleytng@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;I’m powering the Arduino Mega 2560 board using USB. However, I’m going to program the Arduino using an AVRISP mkii programmer. &lt;a href=&quot;http://allaboutee.com/2011/05/11/how-to-program-an-avr-microcontroller/&quot;&gt;This site&lt;/a&gt; shows the pinout of the programmer, and upon comparison with the &lt;a href=&quot;http://arduino.cc/en/uploads/Main/arduino-mega2560_R3-sch.pdf&quot;&gt;Arduino schematic&lt;/a&gt;, I’ve decided to use the programmer this way:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ackerleytng.github.io/post_images/arduino_setup.jpg&quot; alt=&quot;Arduino Setup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Use apt-get to install packages&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install gcc-avr binutils-avr gdb-avr avr-libc avrdude
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To use avr-gcc to compile&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;avr-gcc -DF_CPU=16000000UL -mmcu=atmega2560 -Os -o blink.out blink.c
avr-objcopy -O ihex -R .eeprom blink.out blink.hex
sudo avrdude -V -F -c avrisp2 -p m2560 -P usb -U flash:w:blink.hex
&lt;/code&gt;&lt;/pre&gt;

  &lt;p&gt;&lt;a href=&quot;http://ackerleytng.github.io/arduino-with-avrisp-mkii-crunchbang/&quot;&gt;Setting up Arduino with CrunchBang Linux for pure C projects&lt;/a&gt; was originally published by Ackerley Tng at &lt;a href=&quot;http://ackerleytng.github.io&quot;&gt;Ackerley's Blog&lt;/a&gt; on July 17, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Using Asus RT-AC66R with mio TV]]></title>
 <link rel="alternate" type="text/html" href="http://ackerleytng.github.io/rt-ac66r-mio-tv/" />
  <id>http://ackerleytng.github.io/rt-ac66r-mio-tv</id>
  <updated>2014-07-12T00:00:00-00:00</updated>
  <published>2014-07-12T00:00:00+08:00</published>
  
  <author>
    <name>Ackerley Tng</name>
    <uri>http://ackerleytng.github.io</uri>
    <email>ackerleytng@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;The Asus RT-AC66R is a rather popular router! But I guess instructions are lacking. Anyway, here’s a post to show that the RT-AC66R can indeed be used with Singtel’s mio TV.&lt;/p&gt;

&lt;p&gt;Connect the Optical Network Terminal (ONT) to the Asus RT-AC66R’s WAN port. Then, connect the mio TV set-top box to the 4th LAN port of the RT-AC66R.&lt;/p&gt;

&lt;p&gt;Go to the RT-AC66R’s configuration page, and then on the “Advanced Settings” column on the left, select “LAN”. Select the “IPTV” tab at the top. For the ISP profile, select Singtel-MIO. (My firmware version is 3.0.0.4.374_979) The table entry for IPTV STB Port should say LAN4. I didn’t change the other entries in the “Special Applications” section.&lt;/p&gt;

&lt;p&gt;Then, I had to restart my set-top box (like completely power off and start it again) and then it worked.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://ackerleytng.github.io/rt-ac66r-mio-tv/&quot;&gt;Using Asus RT-AC66R with mio TV&lt;/a&gt; was originally published by Ackerley Tng at &lt;a href=&quot;http://ackerleytng.github.io&quot;&gt;Ackerley's Blog&lt;/a&gt; on July 12, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Reviving the WD Passport]]></title>
 <link rel="alternate" type="text/html" href="http://ackerleytng.github.io/reviving-wd-passport/" />
  <id>http://ackerleytng.github.io/reviving-wd-passport</id>
  <updated>2014-07-08T00:00:00-00:00</updated>
  <published>2014-07-08T00:00:00+08:00</published>
  
  <author>
    <name>Ackerley Tng</name>
    <uri>http://ackerleytng.github.io</uri>
    <email>ackerleytng@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;So. I’m not sure if this is just luck, but I managed to revive a connection to my WD Passport (Essential SE). There are so many forum threads on the Internet that discuss this topic, but most are just cliffhangers that don’t provide real solutions.&lt;/p&gt;

&lt;p&gt;It was neither being recognized on a Mac nor PC, even after:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Trying different cables&lt;/li&gt;
  &lt;li&gt;Using the USB ports at the back of the computer instead of those in the front&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are some other suggestions that you might want to try if you have the resources or patience. I personally think that this is not an issue with power supply to the WD Passport, but you can still try:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using a Y-cable, which is something like &lt;a href=&quot;http://en.wikipedia.org/wiki/File:Y-shaped_USB_3.0_cable.jpg&quot;&gt;this&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Returning it to Western Digital for a new unit&lt;/li&gt;
  &lt;li&gt;Disconnecting all unnecessary USB devices so that all the power goes to the WD Passport&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;revival-procedure&quot;&gt;Revival Procedure&lt;/h3&gt;

&lt;p&gt;I used a desktop PC running 64-bit Windows 7, eventually, to connect to the WD Passport. The WD Passport was never used with this desktop before, hence we know that the drivers for the WD Passport was never installed from the web.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Connect the WD Passport to the USB ports at the &lt;em&gt;back&lt;/em&gt; of a &lt;em&gt;desktop&lt;/em&gt; PC. Windows will probably attempt to install the WD Passport, but will not find the right drivers, because it is unable to identify the device.&lt;/li&gt;
  &lt;li&gt;Go to Device Manager. You should see a USB device that has a yellow triangle next to it, indicating that the drivers for the WD Passport were not installed properly.&lt;/li&gt;
  &lt;li&gt;Download and install the appropriate WD Passport drivers from &lt;a href=&quot;http://wdc.custhelp.com/app/answers/detail/a_id/1708/related/1/session/L2F2LzEvdGltZS8xNDA0ODUwMTc4L3NpZC8zd0ExaE9ZbA%3D%3D&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Go back to Device Manager. Right-click on the Unknown Device, then select “Update Driver Software”.&lt;/li&gt;
  &lt;li&gt;Choose to browse your computer for driver software.&lt;/li&gt;
  &lt;li&gt;Pick from a list of device drivers on your computer.&lt;/li&gt;
  &lt;li&gt;From the list, choose Western Digital, then select WD SES Device. Complete that installation procedure and the WD Passport should now be recognized as a “WD SES Device”. The drive, however, is probably still not working.&lt;/li&gt;
  &lt;li&gt;Unplug the WD Passport. (I unplugged the USB cable on the side of the WD Passport (as opposed to the side plugged into the computer)&lt;/li&gt;
  &lt;li&gt;Plug it back in, and it should auto-detect and install, and work this time.&lt;/li&gt;
  &lt;li&gt;You should probably grab everything you can from the drive and not use it again.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;update-the-firmware&quot;&gt;Update the Firmware&lt;/h3&gt;

&lt;p&gt;Update the firmware on the newly-revived Passport following instructions &lt;a href=&quot;http://www.wdc.com/wdproducts/wdsmartwareupdate/firmware.asp?id=wdfMyPassport&amp;amp;os=WIN&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://ackerleytng.github.io/reviving-wd-passport/&quot;&gt;Reviving the WD Passport&lt;/a&gt; was originally published by Ackerley Tng at &lt;a href=&quot;http://ackerleytng.github.io&quot;&gt;Ackerley's Blog&lt;/a&gt; on July 08, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Mac Setup Notes]]></title>
 <link rel="alternate" type="text/html" href="http://ackerleytng.github.io/mac-setup-notes/" />
  <id>http://ackerleytng.github.io/mac-setup-notes</id>
  <updated>2014-07-02T00:00:00-00:00</updated>
  <published>2014-07-02T00:00:00+08:00</published>
  
  <author>
    <name>Ackerley Tng</name>
    <uri>http://ackerleytng.github.io</uri>
    <email>ackerleytng@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Installed from source&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Installed from .pkg&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MacPorts&lt;/li&gt;
  &lt;li&gt;Node.js&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Installed from .dmg&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Look into /Applications&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Others are installed using MacPorts
(Check using port installed)&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://ackerleytng.github.io/mac-setup-notes/&quot;&gt;Mac Setup Notes&lt;/a&gt; was originally published by Ackerley Tng at &lt;a href=&quot;http://ackerleytng.github.io&quot;&gt;Ackerley's Blog&lt;/a&gt; on July 02, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[My Mac-Emacs Setup]]></title>
 <link rel="alternate" type="text/html" href="http://ackerleytng.github.io/my-mac-emacs-setup/" />
  <id>http://ackerleytng.github.io/my-mac-emacs-setup</id>
  <updated>2014-07-01T00:00:00-00:00</updated>
  <published>2014-07-01T00:00:00+08:00</published>
  
  <author>
    <name>Ackerley Tng</name>
    <uri>http://ackerleytng.github.io</uri>
    <email>ackerleytng@gmail.com</email>
  </author>
  <content type="html">&lt;h2 id=&quot;emacs-distribution&quot;&gt;1. Emacs distribution&lt;/h2&gt;

&lt;p&gt;There are a few distributions of Emacs, and I was looking for the cleanest, most vanilla Emacs, without sacrificing convenience. I went with emacs-app from Macports.&lt;/p&gt;

&lt;p&gt;The version I got was 24.3.1.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo port install emacs-app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;running-emacs-as-a-daemon&quot;&gt;2. Running Emacs as a Daemon&lt;/h2&gt;

&lt;p&gt;Advantage of running Emacs as a Daemon: all Emacs instances initialized from the Terminal will use the same Emacs process, allowing all of them to share the same buffers, command history etc.&lt;/p&gt;

&lt;p&gt;The idea here is to get OSX to start the daemon, aka Emacs server, when the system starts up, and then subsequently, emacsclient is used to connect to that server.&lt;/p&gt;

&lt;p&gt;There are some ways of starting the Emacs daemon automatically on system startup. I chose to use launchd because it felt like the cleanest method. &lt;/p&gt;

&lt;h3 id=&quot;writing-plist-file&quot;&gt;Writing plist file&lt;/h3&gt;

&lt;p&gt;OSX can be configured to read plist files on startup and start the Emacs daemon. Find out more about writing the plist file from &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html&quot;&gt;Apple&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE plist PUBLIC &amp;quot;-//Apple//DTD PLIST 1.0//EN&amp;quot; &amp;quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;plist&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;Label&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;gnu.emacs.daemon.plist&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;ProgramArguments&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;/Applications/MacPorts/Emacs.app/Contents/MacOS/Emacs&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;--daemon&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;RunAtLoad&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;true/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;ServiceDescription&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Gnu Emacs Daemon&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UserName&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;[Your Username]&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The above plist file was named gnu.emacs.daemon.plist and was placed in the ~/Library/LaunchAgents/ directory.&lt;/p&gt;

&lt;p&gt;I chose the user’s LaunchAgents Directory as opposed to the system one to make this start only with my account.&lt;/p&gt;

&lt;h3 id=&quot;checking-to-see-that-the-daemon-starts&quot;&gt;Checking to see that the daemon starts&lt;/h3&gt;

&lt;p&gt;At this point, restart OSX.&lt;/p&gt;

&lt;p&gt;After restarting, to check that the daemon is running, open a Terminal window and do&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;ps aux &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep Emacs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If it is running, you should see a process with this name&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;/Applications/MacPorts/Emacs.app/Contents/MacOS/Emacs --daemon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;configuring-terminal-to-work-with-the-daemon&quot;&gt;Configuring Terminal to work with the daemon&lt;/h3&gt;

&lt;p&gt;To do this simply, I set up two aliases in ~/.bash_profile&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;oe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/Applications/MacPorts/Emacs.app/Contents/MacOS/bin/emacsclient -c -n&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;oie&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/Applications/MacPorts/Emacs.app/Contents/MacOS/bin/emacsclient -n&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/Applications/MacPorts/Emacs.app/Contents/MacOS/Emacs --daemon&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;oe is the command I use to open files, such as&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;oe foobar.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and ed is used to start the daemon again in case the daemon was shut down.&lt;/p&gt;

&lt;p&gt;Using -c uses a graphical frame, otherwise if there is no existing graphical frame, nothing appears to happen in the terminal.&lt;/p&gt;

&lt;p&gt;oie allows me to open a file in an existing frame, if I choose to.&lt;/p&gt;

&lt;p&gt;Using -n allows you to continue using the same terminal window even after Emacs is opened.&lt;/p&gt;

&lt;p&gt;Using the above brings focus to the newly-opened Emacs window and away from the Terminal window.&lt;/p&gt;

&lt;h3 id=&quot;closing-the-daemon&quot;&gt;Closing the daemon&lt;/h3&gt;

&lt;p&gt;If there’s a need to close the daemon for whatever reason, just press Cmd+Q (on an open Emacs frame - it doesn’t work if you do that without an open Emacs frame) as you would for any other OSX program.&lt;/p&gt;

&lt;h2 id=&quot;important-emacs-config&quot;&gt;3. Important emacs config&lt;/h2&gt;

&lt;p&gt;This section contains emacs configuration files that I love to use&lt;/p&gt;

&lt;h3 id=&quot;setting-default-window-size&quot;&gt;Setting default window size&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;lisp&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;add-to-list&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&amp;#39;default-frame-alist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;58&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;add-to-list&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&amp;#39;default-frame-alist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;144&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;moving-all-backups-to-trash&quot;&gt;Moving all backups to Trash&lt;/h3&gt;

&lt;p&gt;To remove clutter:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;lisp&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;setq&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;backup-directory-alist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;~/.Trash&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;multiple-cursorshttpsgithubcomemacsmirrormultiple-cursors&quot;&gt;&lt;a href=&quot;https://github.com/emacsmirror/multiple-cursors&quot;&gt;Multiple Cursors&lt;/a&gt;!&lt;/h3&gt;

&lt;p&gt;Installation instructions are available &lt;a href=&quot;https://github.com/emacsmirror/multiple-cursors&quot;&gt;here&lt;/a&gt;, and you can explore the power of multiple cursors from this &lt;a href=&quot;http://emacsrocks.com/e13.html&quot;&gt;YouTube Video&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;finally&quot;&gt;4. Finally&lt;/h2&gt;

&lt;p&gt;The above combines information from various different sites.&lt;/p&gt;

&lt;p&gt;Drop me a note if you’ve been here and found this useful (or not useful), or if you have questions! It’s my first contribution to the Internet, which has been helping me so much. Hope this will help many other people :).&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://ackerleytng.github.io/my-mac-emacs-setup/&quot;&gt;My Mac-Emacs Setup&lt;/a&gt; was originally published by Ackerley Tng at &lt;a href=&quot;http://ackerleytng.github.io&quot;&gt;Ackerley's Blog&lt;/a&gt; on July 01, 2014.&lt;/p&gt;</content>
</entry>

</feed>
